@using Application.Constants.Identity
@using Domain.Enums.GameServer

@attribute [Route(AppRouteConstants.GameServer.GameServers.View)]
@attribute [Authorize(PermissionConstants.GameServer.Gameserver.Get)]

@if (!_validIdProvided)
{
    <IconWithMessageDisplay Icon="@Icons.Material.Filled.ErrorOutline" Text="Invalid Gameserver Id provided"/>
}
else
{
    <MudPaper Elevation="12" Class="d-flex flex-wrap gap-4 mb-2 pa-4 justify-center align-center mud-text-align-center">
        <MudButton Variant="Variant.Outlined" Color="Color.Warning" StartIcon="@Icons.Material.Filled.ArrowBack"
                   OnClick="@GoBack">Go Back
        </MudButton>
        @if (_canEditGameServer)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Edit"
                       OnClick="@ToggleEditMode">@_editButtonText
            </MudButton>
        }
        @if (_editMode)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save" 
                       OnClick="@Save">Save Changes
            </MudButton>
        }
        @if (_canDeleteGameServer)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete"
                       OnClick="@DeleteGameServer">Delete
            </MudButton>
        }
    </MudPaper>

    <MudPaper Elevation="8" Class="d-flex flex-wrap ma-4 pa-4 gap-4">
        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
            <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Server Information</MudText>
        </MudItem>
        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4">
            <MudTextField @bind-Value="_gameServer.ServerName" Label="Name" Variant="Variant.Outlined" Disabled="@(!_editMode)"/>
            @* TODO: Implement a 'config waiting on server reboot' state in some form after config is updated *@
            <MudTextField @bind-Value="_gameServer.ServerState" Label="Current state" Variant="Variant.Outlined" MaxLines="2" AutoGrow="true" Disabled="true"/>
        </MudItem>
    </MudPaper>
    
    <MudTabs ApplyEffectsToContainer="true" Centered="true" Rounded="true" ActiveTabClass="mud-border-primary" Position="Position.Center">
        <MudTabPanel Text="Config">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudTextField T="string" Placeholder="Find Configuration" Adornment="Adornment.Start" Class="py-1" Immediate="true" @bind-Text="_searchText"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Variant="Variant.Outlined" Margin="Margin.Dense" Clearable="true"/>
            </MudItem>
            @foreach (var localResource in _localResources.Where(x => x.Type == ResourceType.ConfigFile))
            {
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4">
                    <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                        <MudText Color="Color.Secondary" Align="Align.Center" Typo="Typo.h6">@localResource.Name</MudText>
                    </MudItem>
                    <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add"
                               OnClick="@(() => ConfigAdd(localResource))" FullWidth="true" Disabled="@(!_editMode)">
                        Add Config
                    </MudButton>
                    @foreach (var configItem in localResource.ConfigSets)
                    {
                        @if (!ConfigShouldBeShown(configItem))
                        {
                            continue;
                        }

                        <MudStack Row="true" Justify="Justify.SpaceBetween" Wrap="Wrap.NoWrap">
                            <MudText Color="Color.Primary">@configItem.FriendlyName</MudText>
                            <MudSpacer />
                            <MudTextField T="string" @bind-Value="configItem.Value" FullWidth="true" Disabled="@(!_editMode)" OnKeyDown="@(() => ConfigUpdated(configItem))" />
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Color="Color.Error" Disabled="@(!_editMode)"
                                           OnClick="@(() => ConfigDeleted(configItem))" />
                        </MudStack>
                    }
                </MudPaper>
            }
            @if (_localResources.All(x => x.Type != ResourceType.ConfigFile))
            {   
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4">
                    <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                        <MudText Color="Color.Warning" Align="Align.Center" Typo="Typo.h6">No Configuration Files Found</MudText>
                    </MudItem>
                </MudPaper>
            }
        </MudTabPanel>
        <MudTabPanel Text="Advanced">
            @* TODO: Insert Advanced configuration panel here *@
        </MudTabPanel>
        <MudTabPanel Text="Raw">
            @* TODO: Insert code editor panel here *@
        </MudTabPanel>
    </MudTabs>
}
