@using Application.Constants.Communication
@using Application.Constants.Identity
@using Application.Helpers.GameServer
@using Application.Helpers.Runtime
@using Application.Models.Lifecycle
@using Domain.Enums.GameServer

@attribute [Route(AppRouteConstants.GameServer.GameServers.View)]
@attribute [Authorize(PermissionConstants.GameServer.Gameserver.Get)]

@if (!_validIdProvided)
{
    <IconWithMessageDisplay Icon="@Icons.Material.Filled.ErrorOutline" Text="@ErrorMessageConstants.GameServers.NotFound" />
}
else if (!_canViewGameServer)
{
    <IconWithMessageDisplay Icon="@Icons.Material.Filled.PermIdentity" Text="@ErrorMessageConstants.Permissions.NoViewPermission" />
}
else
{
    <MudPaper Elevation="12" Class="d-flex flex-wrap gap-4 mb-2 pa-4 justify-center align-center mud-text-align-center">
        <MudButton Variant="Variant.Outlined" Color="Color.Warning" StartIcon="@Icons.Material.Filled.ArrowBack"
                   OnClick="@GoBack">Go Back
        </MudButton>
        @if (_canEditGameServer)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Edit"
                       OnClick="@ToggleEditMode">@_editButtonText
            </MudButton>
        }
        @if (_editMode)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save" 
                       OnClick="@Save">Save Changes
            </MudButton>
        }
        @if (_canDeleteGameServer)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete"
                       OnClick="@DeleteGameServer">Delete
            </MudButton>
        }
    </MudPaper>
    
    @if (_updateIsAvailable)
    {
        <MudAlert Dense="true" Elevation="8" Square="false" Severity="Severity.Warning">
            An update is available for this game server
        </MudAlert>
    }

    <MudPaper Elevation="8" Class="d-flex flex-wrap ma-4 pa-4 gap-4">
        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
            <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Server Information</MudText>
        </MudItem>
        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4">
            <MudTextField @bind-Value="_gameServer.ServerName" Label="Name" Variant="Variant.Outlined" Disabled="@(!_editMode)"/>
            @* TODO: Implement a 'config waiting on server reboot' state in some form after config is updated *@
            <MudTextField @bind-Value="_gameServer.ServerState" Label="Current state" Variant="Variant.Outlined" MaxLines="2" AutoGrow="true" Disabled="true"/>
        </MudItem>
        @if (_canStartGameServer || _canStopGameServer)
        {
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-1 justify-center">
                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Success" Disabled="@(_gameServer.ServerState.IsRunning())"
                           StartIcon="@Icons.Material.Outlined.Start" OnClick="@StartGameServer">
                    Start Server
                </MudButton>
                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Error" Disabled="@(!_gameServer.ServerState.IsRunning())"
                           StartIcon="@Icons.Material.Outlined.Stop" OnClick="@StopGameServer">
                    Stop Server
                </MudButton>
                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Warning" Disabled="@(_gameServer.ServerState.IsDoingSomething() || !_gameServer.ServerState.IsRunning())"
                           StartIcon="@Icons.Material.Outlined.Refresh" OnClick="@RestartGameServer">
                    Restart Server
                </MudButton>
                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(_gameServer.ServerState.IsDoingSomething())"
                           StartIcon="@Icons.Material.Outlined.Update" OnClick="@UpdateGameServer">
                    Update Server
                </MudButton>
            </MudItem>
        }
    </MudPaper>

    <MudTable ServerData="@ServerReload" Dense="true" Hover="true" Bordered="false" Striped="true" Height="200px" FixedFooter="true" FixedHeader="true"
              @ref="_notifyTable" Class="ma-4 pa-4" >
        <ColGroup>
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: max-content;" />
        </ColGroup>
        <ToolBarContent>
            <MudContainer Class="d-flex flex-row gap-3">
                <MudText Typo="Typo.h6" Class="pr-2 my-2">Game Server Events</MudText>
            </MudContainer>
            <MudSpacer/>
            <MudContainer Class="d-flex flex-row gap-3">
                <MudTextField T="string" @bind-Value="_notifySearchText" OnDebounceIntervalElapsed="@(NotifySearchChanged)" Placeholder="Search" Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="250" Clearable="true"/>
            </MudContainer>
        </ToolBarContent>
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh><MudTableSortLabel SortLabel="Timestamp" T="NotifyRecordSlim">Timestamp</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="Message" T="NotifyRecordSlim">Message</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudTooltip Text="View">
                    <MudButton Color="Color.Warning" OnClick="@(() => SelectNotifyDetailView(context))" Variant="Variant.Outlined" Class="ma-0 pa-0"
                               Disabled="@(context.Detail is null)">
                        <MudIcon Icon="@Icons.Material.Filled.RemoveRedEye"/>
                    </MudButton>
                </MudTooltip>
            </MudTd>
            <MudTd DataLabel="Timestamp">@context.Timestamp.ConvertToLocal(_localTimeZone).ToString(DataConstants.DateTime.DisplayFormat)</MudTd>
            <MudTd DataLabel="Message">@context.Message</MudTd>
        </RowTemplate>
        <ChildRowContent>
            @if (context.Id == _selectedNotifyViewDetail)
            {
                <MudTr>
                    <td colspan="4">
                        <MudPaper Elevation="4">
                            <MudText Align="Align.Left" Typo="Typo.body1" Class="pa-3 ma-2">@context.Detail</MudText>
                        </MudPaper>
                    </td>
                </MudTr>
            }
        </ChildRowContent>
        <NoRecordsContent>
            <MudText>No state changes found</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudContainer Class="d-flex flex-column gap-3">
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
                <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Text" Width="95%" Class="align-self-center my-2"/>
            </MudContainer>
        </LoadingContent>
        <PagerContent>
            <MudContainer Class="d-flex flex-wrap gap-4 align-content justify-center">
                <MudTablePager />
            </MudContainer>
        </PagerContent>
    </MudTable>
    
    <MudTabs ApplyEffectsToContainer="true" Centered="true" Rounded="true" ActiveTabClass="mud-border-primary" Position="Position.Center">
        <MudTabPanel Text="Config">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudTextField T="string" Placeholder="Find Configuration" Adornment="Adornment.Start" Class="py-1" Immediate="true" @bind-Text="_configSearchText"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Variant="Variant.Outlined" Margin="Margin.Dense" Clearable="true"/>
            </MudItem>
            @foreach (var localResource in _localResources.Where(x => x.Type == ResourceType.ConfigFile).OrderBy(x => x.Name))
            {
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4 gap-4">
                    <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                        <MudText Color="Color.Secondary" Align="Align.Center" Inline="true" Typo="Typo.h6">@localResource.Name</MudText>
                    </MudItem>
                    <MudContainer Class="d-flex flex-column gap-1">
                        @foreach (var configItem in localResource.ConfigSets.OrderBy(x => x.FriendlyName))
                        {
                            @if (!ConfigShouldBeShown(configItem))
                            {
                                continue;
                            }

                            <div class="border-solid rounded-pill border pa-0 ma-1">
                                <MudStack Row="true" Justify="Justify.SpaceAround" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Center">
                                    <MudText Color="Color.Primary" Align="Align.Center" Class="ms-4 justify-center">@configItem.FriendlyName</MudText>
                                    <MudTextField T="string" @bind-Value="configItem.Value" FullWidth="true" Disabled="@(!_editMode)" OnKeyDown="@(() => ConfigUpdated(configItem))" />
                                    @if (_canConfigureGameServer || _canEditGameServer)
                                    {
                                        <MudButtonGroup Variant="Variant.Text">
                                            <MudMenu Icon="@Icons.Material.Filled.DriveFileRenameOutline" Disabled="@(!_editMode)" Size="Size.Medium" IconColor="Color.Info">
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%SERVER_NAME%%%"))">Server Name</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD%%%"))">Server Password</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%QUERY_PORT%%%"))">Query Port</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%GAME_PORT%%%"))">Game Port</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%GAME_PORT_PEER%%%"))">Game Peer Port</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD_ADMIN%%%"))">Admin Password</MudMenuItem>
                                                <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD_RCON%%%"))">RCON Password</MudMenuItem>
                                            </MudMenu>
                                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Color="Color.Error" Disabled="@(!_editMode)"
                                                           OnClick="@(() => ConfigDeleted(configItem))" />
                                        </MudButtonGroup>
                                    }
                                </MudStack>
                            </div>
                        }
                    </MudContainer>
                </MudPaper>
            }
            @if (_localResources.All(x => x.Type != ResourceType.ConfigFile))
            {
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4">
                    <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                        <MudText Color="Color.Warning" Align="Align.Center" Typo="Typo.h6">No Configuration Files Found</MudText>
                    </MudItem>
                </MudPaper>
            }
        </MudTabPanel>
        @if (_canEditGameServer)
        {
            <MudTabPanel Text="Advanced">
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                    <MudTextField T="string" Placeholder="Find Configuration" Adornment="Adornment.Start" Class="py-1" Immediate="true" @bind-Text="_configSearchText"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Variant="Variant.Outlined" Margin="Margin.Dense" Clearable="true"/>
                </MudItem>
                @foreach (var localResource in _localResources.Where(x => x.Type == ResourceType.ConfigFile).OrderBy(x => x.Name))
                {
                    <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4" Outlined="true" Square="false">
                        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                            <MudText Color="Color.Secondary" Align="Align.Center" Typo="Typo.h6">@localResource.Name</MudText>
                        </MudItem>
                        <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add"
                                   OnClick="@(() => ConfigAdd(localResource))" FullWidth="true" Disabled="@(!_editMode)">
                            Add Config
                        </MudButton>
                        <MudContainer Class="d-flex flex-column gap-1">
                            @foreach (var configItem in localResource.ConfigSets.OrderBy(x => x.FriendlyName))
                            {
                                @if (!ConfigShouldBeShown(configItem))
                                {
                                    continue;
                                }

                                <div class="border-solid border rounded pa-1 ma-1">
                                    <MudStack Row="false" Justify="Justify.SpaceBetween" Wrap="Wrap.NoWrap" Class="ma-0 pa-1">
                                        <MudStack Row="true" Justify="Justify.SpaceEvenly" Class="ma-0 pa-0">
                                            <MudTextField T="string" Label="Friendly Name" @bind-Value="configItem.FriendlyName" FullWidth="true" Disabled="@(!_editMode)"
                                                          OnKeyDown="@(() => ConfigUpdated(configItem))"/>
                                            <MudTextField T="string" Label="Key" @bind-Value="configItem.Key" FullWidth="true" Disabled="@(!_editMode)"
                                                          OnKeyDown="@(() => ConfigUpdated(configItem))"/>
                                        </MudStack>
                                        <MudStack Row="true" Justify="Justify.SpaceEvenly" Class="ma-0 pa-0">
                                            <MudTextField T="string" Label="Path" @bind-Value="configItem.Path" FullWidth="true" Disabled="@(!_editMode)"
                                                          OnKeyDown="@(() => ConfigUpdated(configItem))"/>
                                            <MudTextField T="string" Label="Category" @bind-Value="configItem.Category" FullWidth="true" Disabled="@(!_editMode)"
                                                          OnKeyDown="@(() => ConfigUpdated(configItem))"/>
                                            <MudCheckBox @bind-Value="configItem.DuplicateKey" Label="Is Duplicate Key" Dense="true" />
                                        </MudStack>
                                        <MudStack Row="true" Justify="Justify.SpaceBetween" Class="ma-0 pa-0">
                                            <MudTextField T="string" Label="Value" @bind-Value="configItem.Value" FullWidth="true" Disabled="@(!_editMode)"
                                                          OnKeyDown="@(() => ConfigUpdated(configItem))"/>
                                            <MudButtonGroup Variant="Variant.Text">
                                                <MudMenu Icon="@Icons.Material.Filled.DriveFileRenameOutline" Disabled="@(!_editMode)" Size="Size.Medium" IconColor="Color.Info">
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%SERVER_NAME%%%"))">Server Name</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD%%%"))">Server Password</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%QUERY_PORT%%%"))">Query Port</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%GAME_PORT%%%"))">Game Port</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%GAME_PORT_PEER%%%"))">Game Peer Port</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD_ADMIN%%%"))">Admin Password</MudMenuItem>
                                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(configItem, "%%%PASSWORD_RCON%%%"))">RCON Password</MudMenuItem>
                                                </MudMenu>
                                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Color="Color.Error" Disabled="@(!_editMode)"
                                                               OnClick="@(() => ConfigDeleted(configItem))" />
                                            </MudButtonGroup>
                                        </MudStack>
                                    </MudStack>
                                </div>
                            }
                        </MudContainer>
                    </MudPaper>
                }
                @if (_localResources.All(x => x.Type != ResourceType.ConfigFile))
                {
                    <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4">
                        <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                            <MudText Color="Color.Warning" Align="Align.Center" Typo="Typo.h6">No Configuration Files Found</MudText>
                        </MudItem>
                    </MudPaper>
                }
            </MudTabPanel>
        }
        @if (_canPermissionGameServer)
        {
            <MudTabPanel Text="Permissions">
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4" Square="false">
                    <MudTable Items="@_assignedRolePermissions" @bind-SelectedItems="_deleteRolePermissions" Hover="true" Dense="true" Striped="true" Class="d-flex flex-wrap" 
                              MultiSelection="true">
                        <ToolBarContent>
                            <MudStack Row="true" Justify="Justify.SpaceBetween" Spacing="3" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Center">
                                <MudText>Roles with direct access to this server</MudText>
                                <MudSpacer/>
                                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add"
                                           OnClick="@(() => AddPermissions(true))">
                                    Add Access
                                </MudButton>
                                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete"
                                           OnClick="@DeletePermissions" Disabled="@(_deleteRolePermissions.Count < 1)">
                                    Remove Access
                                </MudButton>
                            </MudStack>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh></MudTh>
                            <MudTh>Name</MudTh>
                            <MudTh>Access Level</MudTh>
                            <MudTh>Added</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Icon"><MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.PermContactCalendar"/></MudTd>
                            <MudTd DataLabel="Name">@context.RoleName</MudTd>
                            <MudTd DataLabel="Access Level">@context.Access</MudTd>
                            <MudTd DataLabel="Added">@(context.CreatedOn.ConvertToLocal(_localTimeZone))</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
                
                <MudPaper Width="95%" Elevation="10" Class="ma-4 pa-4" Square="false">
                    <MudTable Items="@_assignedUserPermissions" @bind-SelectedItems="_deleteUserPermissions" Hover="true" Dense="true" Striped="true" Class="d-flex flex-wrap"
                              MultiSelection="true">
                        <ToolBarContent>
                            <MudStack Row="true" Justify="Justify.SpaceBetween" Spacing="3" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Center">
                                <MudText>Users with direct access to this server</MudText>
                                <MudSpacer/>
                                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Outlined.Add"
                                           OnClick="@(() => AddPermissions(false))">
                                    Add Access
                                </MudButton>
                                <MudButton Class="my-2" Variant="Variant.Outlined" Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete"
                                           OnClick="@DeletePermissions" Disabled="@(_deleteUserPermissions.Count < 1)">
                                    Remove Access
                                </MudButton>
                            </MudStack>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh></MudTh>
                            <MudTh>Name</MudTh>
                            <MudTh>Access Level</MudTh>
                            <MudTh>Added</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Icon"><MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.VerifiedUser"/></MudTd>
                            <MudTd DataLabel="Name">@context.UserName</MudTd>
                            <MudTd DataLabel="Access Level">@context.Access</MudTd>
                            <MudTd DataLabel="Added">@(context.CreatedOn.ConvertToLocal(_localTimeZone))</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudTabPanel>
        }
    </MudTabs>
}
