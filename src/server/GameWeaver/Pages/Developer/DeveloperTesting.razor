@using Application.Constants.Identity
@using Domain.Enums.GameServer
@attribute [Route(AppRouteConstants.Developer.Testing)]
@attribute [Authorize(PermissionConstants.Developer.Dev)]

<MudContainer>
    <MudGrid Class="pa-4 justify-center mud-text-align-center">
        <MudItem xs="12" sm="12" md="12">
            <MudText Align="Align.Center" Typo="Typo.h5" Class="smaller">
                Hello @_loggedInUser.Username! You have @(GetDevType()) access!
            </MudText>
        </MudItem>
        @if (_isContributor)
        {
            <MudItem xs="12" sm="12" md="12">
                <MudText Align="Align.Center" Typo="Typo.button" Class="smaller">
                Thank you for your contributions to the project!
                </MudText>
            </MudItem>
        }
        @if (_isTester)
        {
            <MudExpansionPanel Class="mud-theme-appbar-background d-flex flex-column pa-4 mb-3" Text="GameServer Networking">
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2">
                    <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.button">Server Status: @_serverStatus</MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2">
                    <MudTextField Variant="Variant.Outlined" Label="Host IP" @bind-Value="_serverIp" />
                    <MudTextField Variant="Variant.Outlined" Label="Host Port" @bind-Value="_serverPort" />
                    <MudSelect Class="d-flex" @bind-Value="_serverProtocol" Label="Protocol" OpenIcon="@Icons.Material.Filled.NetworkCheck"
                               AdornmentColor="Color.Secondary">
                        @foreach (NetworkProtocol item in Enum.GetValues(typeof(NetworkProtocol)))
                        {
                            <MudSelectItem Value="@item">@(item.ToString().ToUpper())</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect Class="d-flex" @bind-Value="_serverSource" Label="Type" OpenIcon="@Icons.Material.Filled.Gamepad"
                               AdornmentColor="Color.Tertiary">
                        @foreach (GameSource item in Enum.GetValues(typeof(GameSource)))
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Primary" OnClick="@(TestServerConnectivity)">
                        Check GameServer Status
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Secondary" OnClick="@(TestPortOpen)">
                        Check Port Open
                    </MudButton>
                </MudItem>
            </MudExpansionPanel>
            <MudExpansionPanel Class="mud-theme-appbar-background d-flex flex-column pa-4 mb-3" Text="GameServer Management">
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Primary" OnClick="@(GenerateHostRegistration)">
                        Generate Host Registration
                    </MudButton>
                    <MudText Color="Color.Secondary" Align="Align.Center" Typo="Typo.button">Host Registration: @(_registrationToken)</MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.button">Work Status: @(_latestWorkState)</MudText>
                    <MudSpacer />
                    <MudText Color="Color.Secondary" Align="Align.Center" Typo="Typo.button">Server Status: @(_selectedGameServer?.ServerState)</MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2">
                    <MudTextField Variant="Variant.Outlined" ReadOnly="true" Label="Host" Value="@(_selectedHost?.Id)" />
                    <MudTextField Variant="Variant.Outlined" ReadOnly="true" Label="Default Profile" Value="@(_defaultProfile.Id)" />
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2">
                    <MudTextField Variant="Variant.Outlined" ReadOnly="true" Label="Game" @bind-Value="_desiredGame.Id" />
                    <MudTextField Variant="Variant.Outlined" ReadOnly="true" Label="Profile" Value="@(_selectedGameServer?.GameProfileId)" />
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudSelect Class="d-flex" @bind-Value="_selectedHost" Label="Host" OpenIcon="@Icons.Material.Filled.Computer"
                               AdornmentColor="Color.Secondary" Disabled="@(_hosts.Count < 1)">
                        @foreach (var host in _hosts)
                        {
                        <MudSelectItem Value="@host">@host.Description</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect Class="d-flex" @bind-Value="_selectedGameServer" Label="GameServer" OpenIcon="@Icons.Material.Filled.Gamepad"
                               AdornmentColor="Color.Tertiary" Disabled="@(_hosts.Count < 1)">
                        @foreach (var gameServer in _gameServers)
                        {
                        <MudSelectItem Value="@gameServer">@gameServer.ServerName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Primary" OnClick="@(() => EnforceGame())">
                        Enforce Game
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Secondary" OnClick="@(() => EnforceDefaultGameProfile())">
                        Enforce Default Profile
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Tertiary" OnClick="@(EnforceGameProfileResources)">
                        Enforce Profile Resources
                    </MudButton>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudButton Variant="Variant.Outlined" Disabled="@(_selectedGameServer is null)" DisableElevation="true"
                               Color="Color.Success" OnClick="@(StartGameServer)">
                        Start Game Server
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" Disabled="@(_selectedGameServer is null)" DisableElevation="true"
                               Color="Color.Error" OnClick="@(StopGameServer)">
                        Stop Game Server
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" Disabled="@(_selectedGameServer is null)" DisableElevation="true"
                               Color="Color.Warning" OnClick="@(RestartGameServer)">
                        Restart Game Server
                    </MudButton>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Success" OnClick="@(CreateGameServer)">
                        Create Game Server
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" Disabled="@(_selectedGameServer is null)" DisableElevation="true"
                               Color="Color.Secondary" OnClick="@(UpdateGameServer)">
                        Update Game Server
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" Disabled="@(_selectedGameServer is null)" DisableElevation="true"
                               Color="Color.Error" OnClick="@(UninstallGameServer)">
                        Uninstall Game Server
                    </MudButton>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex flex-wrap gap-4 pa-2 justify-center">
                    <MudTreeView T="string" Hover="true" ExpandOnClick="true">
                        <MudTreeViewItem Value="@($"ID: {_selectedHost?.Id.ToString()}")"/>
                        <MudTreeViewItem Value="@($"Hostname: {_selectedHost?.Hostname}")"/>
                        <MudTreeViewItem Value="@($"FriendlyName: {_selectedHost?.FriendlyName}")"/>
                        <MudTreeViewItem Value="@($"Description: {_selectedHost?.Description}")"/>
                        <MudTreeViewItem Value="@("Os Details")">
                            <MudTreeViewItem Value="@($"OS: {_selectedHost?.Os}")"/>
                            <MudTreeViewItem Value="@($"OsName: {_selectedHost?.OsName}")"/>
                            <MudTreeViewItem Value="@($"OsVersion: {_selectedHost?.OsVersion}")"/>
                        </MudTreeViewItem>
                        <MudTreeViewItem Value="@("Compute")">
                            @if (_selectedHost?.Motherboards != null)
                            {
                                foreach (var motherboard in _selectedHost.Motherboards)
                                {
                                    <MudTreeViewItem Value="@($"MOBO: {motherboard.Manufacturer} | {motherboard.Product}")" />
                                }
                            }
                            @if (_selectedHost?.Cpus != null)
                            {
                                foreach (var cpu in _selectedHost.Cpus)
                                {
                                    <MudTreeViewItem Value="@($"CPU: {cpu.Name} {cpu.CoreCount}/{cpu.LogicalProcessorCount} using {cpu.SocketDesignation}")" />
                                }
                            }
                        </MudTreeViewItem>
                        <MudTreeViewItem Value="@("RAM")">
                            @if (_selectedHost?.RamModules != null)
                            {
                                foreach (var ram in _selectedHost.RamModules)
                                {
                                    <MudTreeViewItem Value="@($"{ram.Manufacturer} {ram.Capacity} @ {ram.Speed}")" />
                                }
                            }
                        </MudTreeViewItem>
                        <MudTreeViewItem Value="@("Storage")">
                            @if (_selectedHost?.Storage != null)
                            {
                                foreach (var device in _selectedHost.Storage)
                                {
                                    <MudTreeViewItem Value="@($"[{device.Index}]{device.Name} {device.Model} | {device.MountPoint} {device.FreeSpace}/{device.TotalSpace}")" />
                                }
                            }
                        </MudTreeViewItem>
                        <MudTreeViewItem Value="@("Graphics")">
                            @if (_selectedHost?.Gpus != null)
                            {
                                foreach (var gpu in _selectedHost.Gpus)
                                {
                                    <MudTreeViewItem Value="@($"{gpu.Name} v{gpu.DriverVersion} | RAM: {gpu.AdapterRam} | MODE: {gpu.VideoMode}")" />
                                }
                            }
                        </MudTreeViewItem>
                        <MudTreeViewItem Value="@("Network")">
                            @if (_selectedHost?.NetworkInterfaces != null)
                            {
                                foreach (var netIf in _selectedHost.NetworkInterfaces)
                                {
                                    <MudTreeViewItem Value="@($"{netIf.Name} {netIf.Type} | Speed: {netIf.Speed} | MAC: {netIf.MacAddress} | Detail: {netIf.TypeDetail}")">
                                        <MudTreeViewItem Value="@($"DHCP: {netIf.DhcpServer}")" />
                                        @foreach (var address in netIf.DefaultGateways)
                                        {
                                            <MudTreeViewItem Value="@($"GATEWAY: {address}")" />
                                        }
                                        @foreach (var address in netIf.IpAddresses)
                                        {
                                            <MudTreeViewItem Value="@($"ADDRESS: {address}")" />
                                        }
                                        @foreach (var server in netIf.DnsServers)
                                        {
                                            <MudTreeViewItem Value="@($"DNS: {server}")" />
                                        }
                                    </MudTreeViewItem>
                                }
                            }
                        </MudTreeViewItem>
                    </MudTreeView>
                </MudItem>
            </MudExpansionPanel>
        }
    </MudGrid>
</MudContainer>
