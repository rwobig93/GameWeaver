@attribute [Route(AppRouteConstants.Identity.ForgotPassword)]

@attribute [AllowAnonymous]

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudSpacer/>
    @switch (HasValidationRan)
    {
        case true when IsCodeValid:
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center mt-15">
                <MudTextField @bind-Value="DesiredPassword" Label="Desired Password" Variant="Variant.Outlined" InputType="@_passwordInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="@TogglePasswordVisibility"
                              AdornmentAriaLabel="Show Desired Password"
                              Validation="@(new Func<string, IEnumerable<string>>(ValidatePasswordRequirements))"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center mt-4">
                <MudTextField @bind-Value="ConfirmPassword" Label="Confirm Password" Variant="Variant.Outlined" InputType="@_passwordConfirmInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordConfirmInputIcon" OnAdornmentClick="@ToggleConfirmPasswordVisibility"
                              AdornmentAriaLabel="Show Confirm Password"
                              Validation="@(new Func<string, IEnumerable<string>>(ValidatePasswordsMatch))"/>
            <MudMenu Icon="@Icons.Material.Filled.QuestionMark" Color="Color.Inherit" Dense="true" Direction="Direction.Left" Size="Size.Medium">
                <MudText Align="Align.Left" Class="mx-4">Minimum Length:     @_passwordRequirements.MinimumLength</MudText>
                <MudText Align="Align.Left" Class="mx-4">Requires Special:   @_passwordRequirements.RequiresSpecialCharacters</MudText>
                <MudText Align="Align.Left" Class="mx-4">Requires Lowercase: @_passwordRequirements.RequiresLowercase</MudText>
                <MudText Align="Align.Left" Class="mx-4">Requires Uppercase: @_passwordRequirements.RequiresUppercase</MudText>
                <MudText Align="Align.Left" Class="mx-4">Requires Numbers:   @_passwordRequirements.RequiresNumbers</MudText>
            </MudMenu>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center mt-4">
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true" StartIcon="@Icons.Material.Filled.LensBlur" 
                           OnClick="@ChangePassword">Change. That. Password!
                </MudButton>
            </MudItem>
            break;
        default:
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center mt-4">
                <MudIcon Icon="@Icons.Material.Filled.QuestionMark" Color="Color.Primary" Size="Size.Large" Style="width: 250px; height: 250px;"/>
            </MudItem>
            break;
    }
    <MudGrid Class="pa-4 justify-center my-4 mud-text-align-center">
        @switch (HasValidationRan)
        {
            case true when PasswordChanged:
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex justify-center mt-4">
                    <MudText Align="Align.Center" Typo="Typo.h5">Password has been changed! Please Go Home to use that shiny new password!</MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-4">
                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Link="@AppRouteConstants.Index">Go Home</MudButton>
                </MudItem>
                break;
            default:
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex justify-center mt-4">
                    <MudText Align="Align.Center" Typo="Typo.h5">What up yo!?</MudText>
                </MudItem>
                break;
        }
    </MudGrid>
</MudContainer>
