@using Application.Constants.GameServer
@using Domain.Enums.GameServer
@attribute [AllowAnonymous]

<MudPaper Elevation="10" Class="ma-4 pa-4 rounded-lg">
    <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
        <MudStack Row="true" Justify="Justify.SpaceAround" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Center" Style="width: 100%;">
            <MudSwitch @bind-Value="LocalResource.Startup" Label="Enabled" Color="Color.Secondary" Disabled="@(!EditMode)"/>
            <MudSpacer />
            @if (!EditMode)
            {
                <MudText Color="Color.Secondary" Align="Align.Center" Typo="Typo.h6">@LocalResource.Name</MudText>
            }
            else
            {
                <MudTextField T="string" Label="Friendly Name" @bind-Value="LocalResource.Name" AutoGrow="false" Disabled="@(!EditMode)" Class="px-8"
                              OnKeyDown="@(() => UpdateLocalResource(LocalResource))"/>
            }
            <MudSpacer />
            <MudText Color="Color.Tertiary" Align="Align.Center" Typo="Typo.body1">Order: @LocalResource.StartupPriority</MudText>
        </MudStack>
    </MudItem>
    <MudContainer Class="d-flex flex-column gap-1 pa-1" Style="width: 100%;">
        <div class="border-solid border rounded pa-1 ma-1">
            <MudStack Row="false" Justify="Justify.Center" AlignItems="AlignItems.Center" Wrap="Wrap.NoWrap" Class="px-4 py-2" Style="width: 100%;">
                @if (Game.SupportsWindows)
                {
                    <MudTextField T="string" Label="Windows Path" @bind-Value="LocalResource.PathWindows" FullWidth="true" Disabled="@(!EditMode)"
                                  OnKeyDown="@(() => UpdateLocalResource(LocalResource))"/>
                }
                @if (Game.SupportsLinux)
                {
                    <MudTextField T="string" Label="Linux Path" @bind-Value="LocalResource.PathLinux" FullWidth="true" Disabled="@(!EditMode)"
                                  OnKeyDown="@(() => UpdateLocalResource(LocalResource))"/>
                }
                @if (Game.SupportsMac)
                {
                    <MudTextField T="string" Label="Mac Path" @bind-Value="LocalResource.PathMac" FullWidth="true" Disabled="@(!EditMode)"
                                  OnKeyDown="@(() => UpdateLocalResource(LocalResource))"/>
                }
            </MudStack>
            <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center" Class="px-4 py-2" Style="width: 100%;">
                <MudTextField T="string" Label="Arguments (Args)" @bind-Value="LocalResource.Args" FullWidth="true" Disabled="@(!EditMode)"
                              OnKeyDown="@(() => UpdateLocalResource(LocalResource))"/>
                <MudButtonGroup Variant="Variant.Text">
                    <MudMenu Icon="@Icons.Material.Filled.DriveFileRenameOutline" Disabled="@(!EditMode)" Size="Size.Medium" IconColor="Color.Info">
                        @foreach (var dynamicVariable in ConfigurationItemConstants.DynamicVariables)
                        {
                            <MudMenuItem OnClick="@(() => InjectDynamicValue(LocalResource, dynamicVariable.Variable))">@dynamicVariable.FriendlyName</MudMenuItem>
                        }
                    </MudMenu>
                    @if (LocalResource.Type is ResourceType.ScriptFile)
                    {
                        <MudIconButton Icon="@(EditMode ? Icons.Material.Filled.Edit : Icons.Material.Filled.RemoveRedEye)" Size="Size.Medium" Color="Color.Tertiary"
                                       OnClick="@(() => OpenInEditor(LocalResource))"/>
                    }
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Color="Color.Error" OnClick="@(() => DeleteLocalResource(LocalResource))"/>
                </MudButtonGroup>
            </MudStack>
        </div>
    </MudContainer>
</MudPaper>