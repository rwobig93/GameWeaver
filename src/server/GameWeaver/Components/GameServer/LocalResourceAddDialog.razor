@using Application.Constants.GameServer
@using Domain.Enums.GameServer
<MudDialog Class="rounded-lg">
    <DialogContent>
        <MudStack Row="false" Spacing="3" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Stretch">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex justify-center pa-2">
                <MudIcon Icon="@Icon" Color="Color.Primary" Size="Size.Large" Style="@StyleString"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="d-flex justify-center pa-2">
                <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">@Title</MudText>
            </MudItem>
            <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                    <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Display name for this resource">
                        <MudTextField @bind-Value="_newLocalResource.Name" Label="Friendly Name" Variant="Variant.Outlined" Disabled="false"/>
                    </MudTooltip>
                </MudStack>
            </MudPaper>
            @if (_newLocalResource.Type is ResourceType.ConfigFile)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Type of content this resource contains, ignore ignores inherited resources">
                            <MudSelect @bind-Value="_newLocalResource.ContentType" Label="Content Type" Variant="Variant.Outlined" Disabled="false" Required="true">
                                @foreach (var contentType in Enum.GetValues(typeof(ContentType)).Cast<ContentType>())
                                {
                                    <MudSelectItem Value="contentType">@contentType</MudSelectItem>
                                }
                            </MudSelect>
                        </MudTooltip>
                    </MudStack>
                </MudPaper>
            }
            @if (_game.SupportsWindows)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Relative path to the resource (subdirectory/subdir2/file.txt), root is assumed">
                            <MudTextField @bind-Value="_newLocalResource.PathWindows" Label="Windows Path" Variant="Variant.Outlined" Disabled="false"/>
                        </MudTooltip>
                    </MudStack>
                </MudPaper>
            }
            @if (_game.SupportsLinux)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Relative path to the resource (subdirectory/subdir2/file.txt), root is assumed">
                            <MudTextField @bind-Value="_newLocalResource.PathLinux" Label="Linux Path" Variant="Variant.Outlined" Disabled="false"/>
                        </MudTooltip>
                    </MudStack>
                </MudPaper>
            }
            @if (_game.SupportsMac)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Relative path to the resource (subdirectory/subdir2/file.txt), root is assumed">
                            <MudTextField @bind-Value="_newLocalResource.PathMac" Label="Macintosh Path" Variant="Variant.Outlined" Disabled="false"/>
                        </MudTooltip>
                    </MudStack>
                </MudPaper>
            }
            @if (_newLocalResource.Type is ResourceType.Executable or ResourceType.ScriptFile)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Arguments to pass to an executable script or binary">
                            <MudTextField @bind-Value="_newLocalResource.Args" Label="Arguments" Variant="Variant.Outlined" Disabled="false"/>
                        </MudTooltip>
                        <MudButtonGroup Variant="Variant.Text">
                            <MudMenu Icon="@Icons.Material.Filled.DriveFileRenameOutline" Size="Size.Medium" IconColor="Color.Info">
                                @foreach (var dynamicVariable in ConfigurationItemConstants.DynamicVariables)
                                {
                                    <MudMenuItem OnClick="@(() => InjectDynamicValue(dynamicVariable.Variable))">@dynamicVariable.FriendlyName</MudMenuItem>
                                }
                            </MudMenu>
                        </MudButtonGroup>
                    </MudStack>
                </MudPaper>
            }
            @if (_newLocalResource.Type is  ResourceType.ConfigFile)
            {
                <MudPaper Elevation="6" Outlined="true" Class="rounded-lg py-3 pb-1">
                    <MudStack Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="px-5">
                        <MudTooltip Placement="Placement.Top" Delay="TooltipDelay" ShowOnHover="true" Text="Whether to merge existing local config or replace it">
                            <MudCheckBox @bind-Value="_newLocalResource.LoadExisting" Label="Load Existing Config"/>
                        </MudTooltip>
                    </MudStack>
                </MudPaper>
            }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Wrap="Wrap.Wrap" Class="px-4">
            <MudButton Color="Color.Success" Variant="Variant.Outlined" OnClick="@Submit">@ConfirmButtonText</MudButton>
            <MudButton Color="Color.Warning" Variant="Variant.Outlined" OnClick="@Cancel">Cancel</MudButton>
        </MudStack>
    </DialogActions>
</MudDialog>